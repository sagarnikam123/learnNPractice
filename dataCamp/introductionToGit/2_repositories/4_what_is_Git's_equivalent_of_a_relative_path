# What is Git's equivalent of a relative path?

##############################################################################

A hash is like an absolute path: it identifies a specific commit. Another
way to identify a commit is to use the equivalent of a relative path.
The special label HEAD, which we saw in the previous chapter, always refers
to the most recent commit. The label HEAD~1 then refers to the commit before it,
while HEAD~2 refers to the commit before that, and so on.

Note that the symbol between HEAD and the number is a tilde ~,
not a minus sign -, and that there cannot be spaces before or after the tilde.

##############################################################################

You are in the dental repository. Using a single Git command, show the commit
made just before the most recent one.
Which of the following files did it change?

report.txt.
data/western.csv.
Both of the above.
Neither of the above.

Ans --> data/western.csv (git show HEAD~1)

##############################################################################
